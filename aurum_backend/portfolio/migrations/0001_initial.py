# Generated by Django 4.2.23 on 2025-07-25 15:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('client', 'Client')], default='client', help_text='User role: admin can see all clients, client can only see their own data', max_length=20)),
                ('client_code', models.CharField(blank=True, help_text='Client code for client users (required for client role)', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'auth_user_custom',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(db_index=True, max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('asset_type', models.CharField(max_length=50)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('isin', models.CharField(blank=True, db_index=True, max_length=12, null=True)),
                ('cusip', models.CharField(blank=True, db_index=True, max_length=9, null=True)),
                ('coupon_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'portfolio_asset',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique client identifier code', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Client display name', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'portfolio_client',
            },
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_date', models.DateField(db_index=True)),
                ('portfolio_metrics', models.JSONField(default=dict, help_text='Calculated portfolio metrics and chart data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='portfolio.client')),
            ],
            options={
                'db_table': 'portfolio_snapshot',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('transaction_type', models.CharField(max_length=50)),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('bank', models.CharField(default='UNKNOWN', max_length=20)),
                ('account', models.CharField(default='UNKNOWN', max_length=50)),
                ('transaction_id', models.CharField(default='UNKNOWN', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.asset')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.client')),
            ],
            options={
                'db_table': 'portfolio_transaction',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('WEEKLY', 'Weekly Report'), ('MONTHLY', 'Monthly Report'), ('QUARTERLY', 'Quarterly Report'), ('ANNUAL', 'Annual Report'), ('BOND_ISSUER', 'Bond Issuer Report'), ('BOND_MATURITY', 'Bond Maturity Report'), ('EQUITY_BREAKDOWN', 'Equity Breakdown Report')], max_length=20)),
                ('report_date', models.DateField(db_index=True)),
                ('file_path', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('generation_time', models.FloatField(blank=True, help_text='Generation time in seconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='portfolio.client')),
            ],
            options={
                'db_table': 'portfolio_report',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('market_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cost_basis', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('price', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('bank', models.CharField(default='UNKNOWN', max_length=20)),
                ('account', models.CharField(default='UNKNOWN', max_length=50)),
                ('yield_pct', models.FloatField(blank=True, null=True)),
                ('coupon_rate', models.FloatField(blank=True, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolio.asset')),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolio.portfoliosnapshot')),
            ],
            options={
                'db_table': 'portfolio_position',
            },
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['code'], name='portfolio_c_code_a1b9ec_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['ticker'], name='portfolio_a_ticker_288be1_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_type'], name='portfolio_a_asset_t_3401a4_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['isin'], name='portfolio_a_isin_1cda98_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['cusip'], name='portfolio_a_cusip_751822_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='asset',
            unique_together={('ticker', 'isin', 'cusip')},
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['client', 'date'], name='portfolio_t_client__f7d45a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['client', 'asset', 'date'], name='portfolio_t_client__bde67d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['client', 'transaction_type'], name='portfolio_t_client__300237_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='portfolio_t_transac_eb2eca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transaction',
            unique_together={('transaction_id', 'client')},
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['client', 'report_date'], name='portfolio_r_client__7c40ec_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['client', 'report_type'], name='portfolio_r_client__8e0fb9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together={('client', 'report_type', 'report_date')},
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['snapshot'], name='portfolio_p_snapsho_e3d95d_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['asset'], name='portfolio_p_asset_i_e62a36_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['snapshot', 'asset'], name='portfolio_p_snapsho_17f5fa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='position',
            unique_together={('snapshot', 'asset')},
        ),
        migrations.AddIndex(
            model_name='portfoliosnapshot',
            index=models.Index(fields=['client', 'snapshot_date'], name='portfolio_s_client__8afd3a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliosnapshot',
            index=models.Index(fields=['snapshot_date'], name='portfolio_s_snapsho_b01cce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfoliosnapshot',
            unique_together={('client', 'snapshot_date')},
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='auth_user_c_role_c97627_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['client_code'], name='auth_user_c_client__c10594_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role', 'client_code'], name='auth_user_c_role_566877_idx'),
        ),
    ]
